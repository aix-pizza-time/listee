apiVersion: v1
kind: Service
metadata:
  namespace: web
  name: pizzabot-backend
spec:
  selector:
    app: pizzabot-backend
  ports:
  - port: 7002
    targetPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  namespace: web
  name: pizzabot-frontend
spec:
  selector:
    app: pizzabot-frontend
  ports:
  - port: 7003
    targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pizzabot-frontend
  namespace: web
spec:
  selector:
    matchLabels:
      app: pizzabot-frontend
  template:
    metadata:
      labels:
        app: pizzabot-frontend
    spec:
      containers:
      - name: pizzabot-frontend
        image: registry.git.rwth-aachen.de/occloxium-webdev/pizzabot/frontend:latest
        resources:
          limits:
            # memory: "128Mi"
            # cpu: "500m" 
        ports:
        - containerPort: 80
      imagePullSecrets:
      - name: gitlab
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: backend-storage-volume
  namespace: web
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 512Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/pizzabot/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backend-storage-claim
  namespace: web
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 512Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pizzabot-backend
  namespace: web
spec:
  selector:
    matchLabels:
      app: pizzabot-backend
  template:
    metadata:
      labels:
        app: pizzabot-backend
    spec:
      volumes:
        - name: backend-storage
          persistentVolumeClaim:
            claimName: backend-storage-claim
      containers:
      - name: pizzabot-backend
        image: registry.git.rwth-aachen.de/occloxium-webdev/pizzabot/backend:latest
        resources:
          limits:
            # memory: "128Mi"
            # cpu: "500m"
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /static
          name: backend-storage
      imagePullSecrets:
      - name: gitlab
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: pizzabot-ingress
  namespace: web
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/issuer: "letsencrypt-staging"
spec:
  tls: 
  - hosts:
    - pizza.bartolomey.me
    secretName: pizzabot-tls
  rules:
  - host: pizza.bartolomey.me
    http:
      paths:
      - path: /
        backend:
          serviceName: pizzabot-frontend
          servicePort: 80
      - path: /api
        backend:
          serviceName: pizzabot-backend
          servicePort: 3000